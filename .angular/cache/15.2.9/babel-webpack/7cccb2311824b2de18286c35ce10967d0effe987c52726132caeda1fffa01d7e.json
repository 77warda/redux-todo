{"ast":null,"code":"export const initialState = {\n  todos: [{\n    id: 1,\n    todo: 'First',\n    completed: true\n  }, {\n    id: 2,\n    todo: 'Second',\n    completed: false\n  }, {\n    id: 3,\n    todo: 'Third',\n    completed: false\n  }, {\n    id: 4,\n    todo: 'Fourth',\n    completed: true\n  }]\n};\n// Redux Reducer Function\nexport const reducer = (state = initialState, action) => {\n  if (action.type === 'ADDTODO') {\n    const newTodo = {\n      id: state.length + 1,\n      todo: action.payload['todo'],\n      completed: false\n    };\n    return [...state, newTodo];\n  }\n  if (action.type == 'updateTodo') {\n    // return { ...state, todo: state.todo - 1 };\n  }\n  if (action.type == 'deleteTodo') {\n    // return { ...state, todo: 0 };\n  }\n  return state;\n};","map":{"version":3,"mappings":"AAUA,OAAO,MAAMA,YAAY,GAAU;EACjCC,KAAK,EAAE,CACL;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,OAAO;IAAEC,SAAS,EAAE;EAAI,CAAE,EACzC;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,QAAQ;IAAEC,SAAS,EAAE;EAAK,CAAE,EAC3C;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,OAAO;IAAEC,SAAS,EAAE;EAAK,CAAE,EAC1C;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,QAAQ;IAAEC,SAAS,EAAE;EAAI,CAAE;CAE7C;AAED;AACA,OAAO,MAAMC,OAAO,GAAG,CACrBC,QAAiBN,YAAY,EAC7BO,MAAc,KACL;EACT,IAAIA,MAAM,CAACC,IAAI,KAAK,SAAS,EAAE;IAC7B,MAAMC,OAAO,GAAU;MACrBP,EAAE,EAAEI,KAAK,CAACI,MAAM,GAAG,CAAC;MACpBP,IAAI,EAAEI,MAAM,CAACI,OAAO,CAAC,MAAM,CAAC;MAC5BP,SAAS,EAAE;KACZ;IACD,OAAO,CAAC,GAAGE,KAAK,EAAEG,OAAO,CAAC;;EAE5B,IAAIF,MAAM,CAACC,IAAI,IAAI,YAAY,EAAE;IAC/B;EAAA;EAEF,IAAID,MAAM,CAACC,IAAI,IAAI,YAAY,EAAE;IAC/B;EAAA;EAEF,OAAOF,KAAK;AACd,CAAC","names":["initialState","todos","id","todo","completed","reducer","state","action","type","newTodo","length","payload"],"sourceRoot":"","sources":["/Users/macbookpro/Downloads/todoredux/src/app/+state/reducer.ts"],"sourcesContent":["import { Action } from './actions';\r\n\r\nexport interface State {\r\n  id: number;\r\n  todo: string;\r\n  completed: boolean;\r\n}\r\nexport interface State {\r\n  todos: Todo[];\r\n}\r\nexport const initialState: State = {\r\n  todos: [\r\n    { id: 1, todo: 'First', completed: true },\r\n    { id: 2, todo: 'Second', completed: false },\r\n    { id: 3, todo: 'Third', completed: false },\r\n    { id: 4, todo: 'Fourth', completed: true },\r\n  ],\r\n};\r\n\r\n// Redux Reducer Function\r\nexport const reducer = (\r\n  state: State[] = initialState,\r\n  action: Action\r\n): State => {\r\n  if (action.type === 'ADDTODO') {\r\n    const newTodo: State = {\r\n      id: state.length + 1,\r\n      todo: action.payload['todo'],\r\n      completed: false,\r\n    };\r\n    return [...state, newTodo];\r\n  }\r\n  if (action.type == 'updateTodo') {\r\n    // return { ...state, todo: state.todo - 1 };\r\n  }\r\n  if (action.type == 'deleteTodo') {\r\n    // return { ...state, todo: 0 };\r\n  }\r\n  return state;\r\n};\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}