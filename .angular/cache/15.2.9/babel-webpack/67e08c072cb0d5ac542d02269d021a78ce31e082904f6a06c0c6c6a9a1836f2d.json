{"ast":null,"code":"// import { Injectable } from '@angular/core';\n// import { State, reducer } from './reducer';\n// import { Action } from './actions';\nimport { reducer } from './reducer';\nconst win = window;\nexport class Todo {\n  constructor() {\n    this.state = {\n      todos: []\n    };\n  }\n  dispatch(action) {\n    this.state = reducer(this.state, action);\n    win.devTools?.send(action, this.state);\n  }\n  select(path) {\n    if (this.state[path] !== undefined) {\n      return this.state[path];\n    } else {\n      return null;\n    }\n  }\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA;AA6BA,SAAgBA,OAAO,QAAQ,WAAW;AAG1C,MAAMC,GAAG,GAAGC,MAAa;AAUzB,OAAM,MAAOC,IAAI;EAAjBC;IACU,UAAK,GAAU;MACrBC,KAAK,EAAE;KACR;EAcH;EAZEC,QAAQ,CAACC,MAAc;IACrB,IAAI,CAACC,KAAK,GAAGR,OAAO,CAAC,IAAI,CAACQ,KAAK,EAAED,MAAM,CAAC;IACxCN,GAAG,CAACQ,QAAQ,EAAEC,IAAI,CAACH,MAAM,EAAE,IAAI,CAACC,KAAK,CAAC;EACxC;EAEAG,MAAM,CAACC,IAAY;IACjB,IAAI,IAAI,CAACJ,KAAK,CAACI,IAAI,CAAC,KAAKC,SAAS,EAAE;MAClC,OAAO,IAAI,CAACL,KAAK,CAACI,IAAI,CAAC;KACxB,MAAM;MACL,OAAO,IAAI;;EAEf","names":["reducer","win","window","Todo","constructor","todos","dispatch","action","state","devTools","send","select","path","undefined"],"sourceRoot":"","sources":["E:\\oneSchool\\angularApp\\todoredux\\src\\app\\+state\\todo.service.ts"],"sourcesContent":["// import { Injectable } from '@angular/core';\n// import { State, reducer } from './reducer';\n// import { Action } from './actions';\n\n// const win = window as any;\n// @Injectable({\n//   providedIn: 'root',\n// })\n// export class Todo {\n//   private state: State = {\n//     count: 0,\n//   };\n\n//   dispatch(action: Action) {\n//     this.state = reducer(this.state, action);\n//     win.devTools?.send(action, this.state);\n//   }\n\n//   select(path: string) {\n//     if (this.state[path] !== undefined) {\n//       return this.state[path];\n//     } else {\n//       return null;\n//     }\n//   }\n// }\n\n\n\n\nimport { Injectable } from '@angular/core';\nimport { State, reducer } from './reducer';\nimport { Action, AddTodoAction, UpdateTodoAction, DeleteTodoAction } from './actions';\n\nconst win = window as any;\n\n// @Injectable({\n//   providedIn: 'root',\n// })\nexport interface Todo {\n  id: number;\n  title: string;\n  completed: boolean;\n}\nexport class Todo {\n  private state: State = {\n    todos: [],\n  };\n\n  dispatch(action: Action) {\n    this.state = reducer(this.state, action);\n    win.devTools?.send(action, this.state);\n  }\n\n  select(path: string) {\n    if (this.state[path] !== undefined) {\n      return this.state[path];\n    } else {\n      return null;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}