{"ast":null,"code":"export const initialState = {\n  id: 0,\n  todo: '',\n  completed: false\n};\n// Redux Reducer Function\nexport const reducer = (state = initialState, action) => {\n  if (action.type === 'addTodo') {\n    const newTodo = {\n      id: state.todo.length + 1,\n      todo: action.payload?.['todo'],\n      completed: false\n    };\n    return {\n      ...state,\n      id: state.id + 1,\n      todo: newTodo.todo,\n      completed: false\n    };\n  }\n  if (action.type == 'updateTodo') {\n    // return { ...state, todo: state.todo - 1 };\n  }\n  if (action.type == 'deleteTodo') {\n    // return { ...state, todo: 0 };\n  }\n  return state;\n};","map":{"version":3,"mappings":"AAQA,OAAO,MAAMA,YAAY,GAAU;EACjCC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAE;CACZ;AACD;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,QAAeL,YAAY,EAAEM,MAAc,KAAW;EAC5E,IAAIA,MAAM,CAACC,IAAI,KAAK,SAAS,EAAE;IAC7B,MAAMC,OAAO,GAAU;MACrBP,EAAE,EAAEI,KAAK,CAACH,IAAI,CAACO,MAAM,GAAG,CAAC;MACzBP,IAAI,EAAEI,MAAM,CAACI,OAAO,GAAG,MAAM,CAAC;MAC9BP,SAAS,EAAE;KACZ;IACD,OAAO;MACL,GAAGE,KAAK;MACRJ,EAAE,EAAEI,KAAK,CAACJ,EAAE,GAAG,CAAC;MAChBC,IAAI,EAAEM,OAAO,CAACN,IAAI;MAClBC,SAAS,EAAE;KACZ;;EAEH,IAAIG,MAAM,CAACC,IAAI,IAAI,YAAY,EAAE;IAC/B;EAAA;EAEF,IAAID,MAAM,CAACC,IAAI,IAAI,YAAY,EAAE;IAC/B;EAAA;EAEF,OAAOF,KAAK;AACd,CAAC","names":["initialState","id","todo","completed","reducer","state","action","type","newTodo","length","payload"],"sourceRoot":"","sources":["/Users/macbookpro/Downloads/todoredux/src/app/+state/reducer.ts"],"sourcesContent":["import { Action } from './actions';\r\n\r\nexport interface State {\r\n  id: number;\r\n  todo: string;\r\n  completed: boolean;\r\n}\r\n\r\nexport const initialState: State = {\r\n  id: 0,\r\n  todo: '',\r\n  completed: false,\r\n};\r\n// Redux Reducer Function\r\nexport const reducer = (state: State = initialState, action: Action): State => {\r\n  if (action.type === 'addTodo') {\r\n    const newTodo: State = {\r\n      id: state.todo.length + 1,\r\n      todo: action.payload?.['todo'], // Assuming payload has a 'todo' property\r\n      completed: false,\r\n    };\r\n    return {\r\n      ...state,\r\n      id: state.id + 1,\r\n      todo: newTodo.todo,\r\n      completed: false,\r\n    };\r\n  }\r\n  if (action.type == 'updateTodo') {\r\n    // return { ...state, todo: state.todo - 1 };\r\n  }\r\n  if (action.type == 'deleteTodo') {\r\n    // return { ...state, todo: 0 };\r\n  }\r\n  return state;\r\n};\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}