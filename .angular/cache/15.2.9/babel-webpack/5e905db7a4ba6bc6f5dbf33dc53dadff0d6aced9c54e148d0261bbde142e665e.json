{"ast":null,"code":"export const initialState = {\n  id: 0,\n  todo: '',\n  completed: false\n};\n// Redux Reducer Function\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        ...state,\n        id: state.id + 1\n      };\n    // case 'DECREMENT':\n    //   return { ...state, count: state.count - 1 };\n    // case 'RESET':\n    //   return { ...state, count: 0 };\n    default:\n      return state;\n  }\n  // if (action.type === 'addTodo') {\n  //   const newTodo: State = {\n  //     id: state.todos ? state.todos.length + 1 : 1,\n  //     todo: action.payload['todoData'].name,\n  //     completed: false,\n  //   };\n  //   // Update the todos array in the state\n  //   const updatedTodos = state.todos ? [...state.todos, newTodo] : [newTodo];\n  //   return {\n  //     ...state,\n  //     id: state.id + 1,\n  //     todo: '',\n  //     completed: false,\n  //     todos: updatedTodos,\n  //   };\n  // }\n  // if (action.type == 'updateTodo') {\n  //   // return { ...state, todo: state.todo - 1 };\n  // }\n  // if (action.type == 'deleteTodo') {\n  //   // return { ...state, todo: 0 };\n  // }\n  // return state;\n};","map":{"version":3,"mappings":"AASA,OAAO,MAAMA,YAAY,GAAU;EACjCC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAE;CACZ;AACD;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,QAAeL,YAAY,EAAEM,MAAc,KAAW;EAC5E,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,WAAW;MACd,OAAO;QAAE,GAAGF,KAAK;QAAEJ,EAAE,EAAEI,KAAK,CAACJ,EAAE,GAAG;MAAC,CAAE;IACvC;IACA;IACA;IACA;IACA;MACE,OAAOI,KAAK;EAAC;EAEjB;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC","names":["initialState","id","todo","completed","reducer","state","action","type"],"sourceRoot":"","sources":["/Users/macbookpro/Downloads/todoredux/src/app/+state/reducer.ts"],"sourcesContent":["import { Action } from './actions';\r\n\r\nexport interface State {\r\n  id: number;\r\n  todo: string;\r\n  completed: boolean;\r\n  todos?: State[];\r\n}\r\n\r\nexport const initialState: State = {\r\n  id: 0,\r\n  todo: '',\r\n  completed: false,\r\n};\r\n// Redux Reducer Function\r\nexport const reducer = (state: State = initialState, action: Action): State => {\r\n  switch (action.type) {\r\n    case 'INCREMENT':\r\n      return { ...state, id: state.id + 1 };\r\n    // case 'DECREMENT':\r\n    //   return { ...state, count: state.count - 1 };\r\n    // case 'RESET':\r\n    //   return { ...state, count: 0 };\r\n    default:\r\n      return state;\r\n  }\r\n  // if (action.type === 'addTodo') {\r\n  //   const newTodo: State = {\r\n  //     id: state.todos ? state.todos.length + 1 : 1,\r\n  //     todo: action.payload['todoData'].name,\r\n  //     completed: false,\r\n  //   };\r\n\r\n  //   // Update the todos array in the state\r\n  //   const updatedTodos = state.todos ? [...state.todos, newTodo] : [newTodo];\r\n\r\n  //   return {\r\n  //     ...state,\r\n  //     id: state.id + 1,\r\n  //     todo: '',\r\n  //     completed: false,\r\n  //     todos: updatedTodos,\r\n  //   };\r\n  // }\r\n  // if (action.type == 'updateTodo') {\r\n  //   // return { ...state, todo: state.todo - 1 };\r\n  // }\r\n  // if (action.type == 'deleteTodo') {\r\n  //   // return { ...state, todo: 0 };\r\n  // }\r\n  // return state;\r\n};\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}