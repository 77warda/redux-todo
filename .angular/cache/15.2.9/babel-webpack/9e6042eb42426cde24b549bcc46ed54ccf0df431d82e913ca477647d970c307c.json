{"ast":null,"code":"let nextTodoId = 1;\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case 'addTodo':\n      const addTodoAction = action;\n      const newTodo = {\n        id: nextTodoId++,\n        title: addTodoAction.payload.title,\n        completed: false\n      };\n      return {\n        ...state,\n        todos: [...state.todos, newTodo]\n      };\n    case 'updateTodo':\n      const updateTodoAction = action;\n      return {\n        ...state,\n        todos: state.todos.map(todo => todo.id === updateTodoAction.payload.id ? {\n          ...todo,\n          title: updateTodoAction.payload.title\n        } : todo)\n      };\n    case 'deleteTodo':\n      const deleteTodoAction = action;\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.id !== deleteTodoAction.payload.id)\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"mappings":"AAYA,IAAIA,UAAU,GAAG,CAAC;AAElB,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAY,EAAEC,MAAc,KAAW;EAC7D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,SAAS;MACZ,MAAMC,aAAa,GAAGF,MAAuB;MAC7C,MAAMG,OAAO,GAAS;QACpBC,EAAE,EAAEP,UAAU,EAAE;QAChBQ,KAAK,EAAEH,aAAa,CAACI,OAAO,CAACD,KAAK;QAClCE,SAAS,EAAE;OACZ;MACD,OAAO;QACL,GAAGR,KAAK;QACRS,KAAK,EAAE,CAAC,GAAGT,KAAK,CAACS,KAAK,EAAEL,OAAO;OAChC;IAEH,KAAK,YAAY;MACf,MAAMM,gBAAgB,GAAGT,MAA0B;MACnD,OAAO;QACL,GAAGD,KAAK;QACRS,KAAK,EAAET,KAAK,CAACS,KAAK,CAACE,GAAG,CAACC,IAAI,IACzBA,IAAI,CAACP,EAAE,KAAKK,gBAAgB,CAACH,OAAO,CAACF,EAAE,GACnC;UAAE,GAAGO,IAAI;UAAEN,KAAK,EAAEI,gBAAgB,CAACH,OAAO,CAACD;QAAK,CAAE,GAClDM,IAAI;OAEX;IAEH,KAAK,YAAY;MACf,MAAMC,gBAAgB,GAAGZ,MAA0B;MACnD,OAAO;QACL,GAAGD,KAAK;QACRS,KAAK,EAAET,KAAK,CAACS,KAAK,CAACK,MAAM,CAACF,IAAI,IAAIA,IAAI,CAACP,EAAE,KAAKQ,gBAAgB,CAACN,OAAO,CAACF,EAAE;OAC1E;IAEH;MACE,OAAOL,KAAK;EAAC;AAEnB,CAAC","names":["nextTodoId","reducer","state","action","type","addTodoAction","newTodo","id","title","payload","completed","todos","updateTodoAction","map","todo","deleteTodoAction","filter"],"sourceRoot":"","sources":["E:\\oneSchool\\angularApp\\todoredux\\src\\app\\+state\\reducer.ts"],"sourcesContent":["import { Action, AddTodoAction, UpdateTodoAction, DeleteTodoAction } from './actions';\r\n\r\nexport interface State {\r\n  todos: Todo[];\r\n}\r\n\r\nexport interface Todo {\r\n  id: number;\r\n  title: string;\r\n  completed: boolean;\r\n}\r\n\r\nlet nextTodoId = 1;\r\n\r\nexport const reducer = (state: State, action: Action): State => {\r\n  switch (action.type) {\r\n    case 'addTodo':\r\n      const addTodoAction = action as AddTodoAction;\r\n      const newTodo: Todo = {\r\n        id: nextTodoId++,\r\n        title: addTodoAction.payload.title,\r\n        completed: false,\r\n      };\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos, newTodo],\r\n      };\r\n\r\n    case 'updateTodo':\r\n      const updateTodoAction = action as UpdateTodoAction;\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map(todo =>\r\n          todo.id === updateTodoAction.payload.id\r\n            ? { ...todo, title: updateTodoAction.payload.title }\r\n            : todo\r\n        ),\r\n      };\r\n\r\n    case 'deleteTodo':\r\n      const deleteTodoAction = action as DeleteTodoAction;\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter(todo => todo.id !== deleteTodoAction.payload.id),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}