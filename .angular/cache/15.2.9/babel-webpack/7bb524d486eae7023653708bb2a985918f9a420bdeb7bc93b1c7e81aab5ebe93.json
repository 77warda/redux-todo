{"ast":null,"code":"import { initialState, reducer } from './reducer';\nimport * as i0 from \"@angular/core\";\nconst win = window;\n/**\n * Simple State Management using Redux WITHOUT reactivity\n */\nexport class Todo {\n  /**\n   * Ignore the constructor code\n   * @ignore Redux Dev Tools setup\n   */\n  constructor() {\n    this.state = initialState;\n    // Redux Dev Tools\n    if (win.__REDUX_DEVTOOLS_EXTENSION__) {\n      win.devTools = win.__REDUX_DEVTOOLS_EXTENSION__.connect();\n      // Set Initial State for Redux DevTools\n      win.devTools.init(this.state);\n      // Time Travel Debugging\n      win.devTools.subscribe(message => {\n        if (message.type === 'DISPATCH' && message.payload.type === 'JUMP_TO_ACTION') {\n          this.state = JSON.parse(message.state);\n        }\n        if (message.type === 'ACTION') {\n          this.dispatch({\n            type: message.payload\n          });\n        }\n      });\n    }\n  }\n  dispatch(action) {\n    this.state = reducer(this.state, action);\n    /**\n     * @ignore Send action, state info to Redux Dev Tools\n     */\n    win.devTools?.send(action, this.state);\n  }\n  select(path) {\n    if (this.state[path] !== undefined) {\n      return this.state[path];\n    } else {\n      return null;\n    }\n  }\n}\nTodo.ɵfac = function Todo_Factory(t) {\n  return new (t || Todo)();\n};\nTodo.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: Todo,\n  factory: Todo.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,EAASC,OAAO,QAAQ,WAAW;;AAGxD,MAAMC,GAAG,GAAGC,MAAa;AAEzB;;;AAMA,OAAM,MAAOC,IAAI;EAGf;;;;EAIAC;IANQ,UAAK,GAAUL,YAAY;IAOjC;IACA,IAAIE,GAAG,CAACI,4BAA4B,EAAE;MACpCJ,GAAG,CAACK,QAAQ,GAAGL,GAAG,CAACI,4BAA4B,CAACE,OAAO,EAAE;MACzD;MACAN,GAAG,CAACK,QAAQ,CAACE,IAAI,CAAC,IAAI,CAACC,KAAK,CAAC;MAC7B;MACAR,GAAG,CAACK,QAAQ,CAACI,SAAS,CAAEC,OAAO,IAAI;QACjC,IACEA,OAAO,CAACC,IAAI,KAAK,UAAU,IAC3BD,OAAO,CAACE,OAAO,CAACD,IAAI,KAAK,gBAAgB,EACzC;UACA,IAAI,CAACH,KAAK,GAAGK,IAAI,CAACC,KAAK,CAACJ,OAAO,CAACF,KAAK,CAAC;;QAGxC,IAAIE,OAAO,CAACC,IAAI,KAAK,QAAQ,EAAE;UAC7B,IAAI,CAACI,QAAQ,CAAC;YAAEJ,IAAI,EAAED,OAAO,CAACE;UAAO,CAAE,CAAC;;MAE5C,CAAC,CAAC;;EAEN;EAEAG,QAAQ,CAACC,MAAc;IACrB,IAAI,CAACR,KAAK,GAAGT,OAAO,CAAC,IAAI,CAACS,KAAK,EAAEQ,MAAM,CAAC;IAExC;;;IAGAhB,GAAG,CAACK,QAAQ,EAAEY,IAAI,CAACD,MAAM,EAAE,IAAI,CAACR,KAAK,CAAC;EACxC;EAEAU,MAAM,CAACC,IAAY;IACjB,IAAI,IAAI,CAACX,KAAK,CAACW,IAAI,CAAC,KAAKC,SAAS,EAAE;MAClC,OAAO,IAAI,CAACZ,KAAK,CAACW,IAAI,CAAC;KACxB,MAAM;MACL,OAAO,IAAI;;EAEf;;AA5CWjB,IAAI;mBAAJA,IAAI;AAAA;AAAJA,IAAI;SAAJA,IAAI;EAAAmB,SAAJnB,IAAI;EAAAoB,YAFH;AAAM","names":["initialState","reducer","win","window","Todo","constructor","__REDUX_DEVTOOLS_EXTENSION__","devTools","connect","init","state","subscribe","message","type","payload","JSON","parse","dispatch","action","send","select","path","undefined","factory","providedIn"],"sourceRoot":"","sources":["/Users/macbookpro/Downloads/todoredux/src/app/redux/todo.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { initialState, State, reducer } from './reducer';\nimport { Action } from './actions';\n\nconst win = window as any;\n\n/**\n * Simple State Management using Redux WITHOUT reactivity\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class Todo {\n  private state: State = initialState;\n\n  /**\n   * Ignore the constructor code\n   * @ignore Redux Dev Tools setup\n   */\n  constructor() {\n    // Redux Dev Tools\n    if (win.__REDUX_DEVTOOLS_EXTENSION__) {\n      win.devTools = win.__REDUX_DEVTOOLS_EXTENSION__.connect();\n      // Set Initial State for Redux DevTools\n      win.devTools.init(this.state);\n      // Time Travel Debugging\n      win.devTools.subscribe((message) => {\n        if (\n          message.type === 'DISPATCH' &&\n          message.payload.type === 'JUMP_TO_ACTION'\n        ) {\n          this.state = JSON.parse(message.state);\n        }\n\n        if (message.type === 'ACTION') {\n          this.dispatch({ type: message.payload });\n        }\n      });\n    }\n  }\n\n  dispatch(action: Action) {\n    this.state = reducer(this.state, action);\n\n    /**\n     * @ignore Send action, state info to Redux Dev Tools\n     */\n    win.devTools?.send(action, this.state);\n  }\n\n  select(path: string) {\n    if (this.state[path] !== undefined) {\n      return this.state[path];\n    } else {\n      return null;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}